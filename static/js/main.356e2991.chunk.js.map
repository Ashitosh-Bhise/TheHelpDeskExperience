{"version":3,"sources":["components/loginOrSignUpForm.tsx","components/navbar.tsx","components/loginOrSignUpParent.tsx","components/sideNavMenu.tsx","components/ticketCard.tsx","components/createOrUpdateTicketForm.tsx","components/dashboard.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initializeIcons","SignUpForm","props","useState","className","Stack","TextField","label","description","iconProps","iconName","type","signingUp","Toggle","inlineLabel","onText","offText","onChange","ev","checked","console","log","to","PrimaryButton","id","text","buttonText","Navbar","useEffect","Fragment","LoginPage","signUpBoolean","setSignUp","loginBoolean","setLogin","onClick","DefaultButton","NavMenu","Nav","onLinkClick","selectedKey","selectedAriaLabel","ariaLabel","styles","root","width","height","boxSizing","border","overflowY","color","borderTop","groups","links","name","url","key","icon","TicketForm","siteTextStyles","fontWeight","FontWeights","semibold","descriptionTextStyles","helpfulTextStyles","regular","userObj","subject","category","department","comment","userName","Card","tokens","childrenMargin","compact","Item","Persona","secondaryText","Section","Text","variant","horizontal","padding","required","Dropdown","placeholder","options","multiline","autoAdjustHeight","styleId","setStyleId","dashType","match","params","staticData","map","item","App","exact","path","component","LoginOrSignUp","Dashboard","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.356e2991.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Toggle, DefaultButton, PrimaryButton, TextField, Stack, initializeIcons, ITextFieldProps } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Link, RouteComponentProps } from \"react-router-dom\";\ninitializeIcons();\n\n// interface ILoginProps  {\n\n// }\ninterface ISignInOrLogin {\n    buttonText: string;\n    signingUp?: boolean;\n    // handleChange: (event: React.FormEvent<HTMLInputElement>) => void;\n}\n\n\n\n// export interface DetailsProps extends RouteComponentProps<{}> {}\n\nconst SignUpForm: React.FC<ISignInOrLogin> = (props) => {\n\n    const [userEmail, setUserEmail] = useState<string>(\"\");\n    const [userPassword, setPassword] = useState<string>(\"\");\n    // const emailInputRef = useRef<HTMLInputElement>(null);\n\n    // useEffect(() => {\n\n    // }, [])\n\n    // const login = (e: React.ChangeEvent<HTMLInputElement>) => {\n    //     console.log(e.currentTarget.value)\n    //     // props.history.push()\n\n    // }\n\n    // const _onChange = (ev: React.MouseEvent<HTMLElement>, checked: boolean) => {\n    //     console.log('toggle is ' + (checked ? 'checked' : 'not checked'));\n    // }\n\n    return (\n        <div>\n            <form className=\"animated pulse\">\n                <Stack>\n                    {/* <input className=\"ms-TextField-field\" onChange={e=>setUserEmail(e.target.value)}/> */}\n                    <TextField\n\n                        // onChange={e=>setUserEmail(e.target.value)}\n                        className=\"loginOrSignUpInput\"\n                        label=\"E-mail\"\n                        // value={userEmail}\n                        description=\"Please provide a valid E-mail\"\n                        iconProps={{ iconName: 'NewMail' }}\n                    \n                    />\n                    <TextField\n                        className=\"loginOrSignUpInput\"\n                        label=\"Password\"\n                        description=\"Password must be 6-10 characters long & contain one capitol letter\"\n                        iconProps={{ iconName: 'AuthenticatorApp' }}\n                        type=\"password\"\n                    />\n\n                    {props.signingUp ? <Toggle label=\"Account Type:\" inlineLabel onText=\"Team Member\" offText=\"Helpdesk User\" onChange={()=>(ev: React.MouseEvent<HTMLElement>, checked: boolean) => {console.log('toggle is ' + (checked ? 'checked' : 'not checked'));}} /> : null}\n                    <div className=\"submitButtonDiv\">\n                        <Link to=\"/dashboard/ViewAll\"><PrimaryButton id=\"submitSignUp\" text={props.buttonText} /></Link>\n\n                    </div>\n\n                </Stack>\n            </form>\n\n        </div>\n    )\n}\n\n\n\nexport default SignUpForm;\n","import React, { useState, useEffect } from 'react';\nimport { Toggle, DefaultButton, PrimaryButton, TextField, Stack, initializeIcons, ITextFieldProps } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Link, RouteComponentProps } from \"react-router-dom\";\ninitializeIcons();\n\n// interface ILoginProps  {\n\n// }\ninterface INavProps {\n    // buttonText: string;\n    // signingUp?: boolean;\n    // handleChange: (event: React.FormEvent<HTMLInputElement>) => void;\n}\n\n// interface IDetailProps extends React.Component<{dashType: string}> {\n    \n\n// }\n\n\n\n// export interface DetailsProps extends RouteComponentProps<{}> {}\n\nconst Navbar: React.FC = (props) => {\n\n    const [userEmail, setEmail] = useState<string>(\"\");\n    const [userPassword, setPassword] = useState<string>(\"\");\n    const logout = () => {\n        \n    }\n    // const emailInputRef = useRef<HTMLInputElement>(null);\n\n    useEffect(() => {\n\n    }, [])\n\n\n    return (\n        <React.Fragment>\n\n            <div id=\"navbarDiv\">\n                <h3>The Helpdesk Experience</h3>\n            <Link to=\"/\"> <h4>Logout</h4></Link>\n            </div>\n\n        </React.Fragment>\n    )\n}\n\n\n\nexport default Navbar;\n","import React, { useState } from 'react';\nimport { DefaultButton, PrimaryButton, Stack, IStackTokens } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport LoginOrSignUpForm from \"./loginOrSignUpForm\";\nimport Navbar from \"./navbar\";\n// import SignUpForm from \"./signUpForm\";\n\ninterface ILoginProps {\n    // login: ()=>void;\n}\n\n\nconst LoginPage: React.FC<ILoginProps> = (props) => {\n\n    const [signUpBoolean, setSignUp] = useState<boolean>(false);\n    const [loginBoolean, setLogin] = useState<boolean>(false);\n\n    // const login = () => {\n\n    // }\n\n\n\n\n    return (\n        <React.Fragment>\n            <Navbar/>\n\n            <div className=\"mainDiv\">\n                {\n                    signUpBoolean\n                        ? <LoginOrSignUpForm buttonText={\"Sign Up\"} signingUp={true} />\n                        : loginBoolean\n                            ? <LoginOrSignUpForm buttonText={\"Login\"} />\n                            : <div>\n                                <h1>Please login or create an account</h1>\n                                <div className=\"buttonDiv\">\n                                    <PrimaryButton id=\"signUpButton\" text=\"Sign Up\" onClick={() => setSignUp(true)} />\n                                    <DefaultButton id=\"loginButton\" text=\"Login\" onClick={() => setLogin(true)} />\n                                    {/* <Icon iconName=\"CommentSolid\" className=\"ms-CommentSolid\" /> */}\n                                </div>\n                            </div>\n                }\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default LoginPage;\n\n// const el = <LoginPage title=\"Welcome!\" paragraph=\"To this example\" />","import * as React from 'react';\nimport { Nav, INavLink } from 'office-ui-fabric-react/lib/Nav';\n\nconst NavMenu: React.FunctionComponent = () => {\n\n    // const _onLinkClick = (ev: React.MouseEvent<HTMLElement>, item?: INavLink) => {\n    //     if (item && item.name === 'News') {\n    //         alert('News link clicked');\n    //     }\n    // }\n    return (\n        <Nav\n            onLinkClick={()=>console.log(\"Read\")}\n            selectedKey=\"key3\"\n            selectedAriaLabel=\"Selected\"\n            ariaLabel=\"Nav basic left of screen\"\n            styles={{\n                root: {\n                    width: \"15vw\",\n                    height: \"95.9vh\",\n                    boxSizing: 'border-box',\n                    border: '1px solid #484644',\n                    overflowY: 'auto',\n                    color: 'red',\n                    borderTop: \"none\"\n                }\n            }}\n            groups={[\n                {\n                    links: [\n                        {\n                            name: 'View my tickets',\n                            url: '/dashboard/ViewAll',\n                            key: 'key3',\n                            // target: '_blank',\n                            icon: 'TextDocumentShared'\n                        },\n                        {\n                            name: 'Create ticket',\n                            url: '/dashboard/createTicket',\n                            key: 'key4',\n                            // target: '_blank',\n                            icon: 'ExploreContent'\n                        },\n                        {\n                            name: 'Update ticket',\n                            url: '/dashboard/updateTicket',\n                            key: 'key5',\n                            icon: 'Label'\n                            \n                        },\n                        {\n                            name: 'Delete ticket',\n                            url: '/dashboard/deleteTicket',\n                            key: 'key6',\n                            icon: \"RemoveFromShoppingList\"\n                        },\n                    ]\n                }\n            ]}\n        />\n    );\n};\n\n\n\nexport default NavMenu;\n","import React, { useState } from 'react';\nimport { DefaultButton, PrimaryButton, TextField, Stack, initializeIcons, ITextFieldProps, Dropdown, Persona, Text, Image } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport { Card, ICardTokens, ICardSectionStyles, ICardSectionTokens } from '@uifabric/react-cards';\nimport NavMenu from \"./sideNavMenu\";\nimport Navbar from \"./navbar\";\nimport DisplayList from \"./ticketCard\";\nimport { FontWeights } from '@uifabric/styling';\nimport {IIconStyles,ITextStyles} from 'office-ui-fabric-react';\nimport {Link} from \"react-router-dom\";\n// import {TicketCategory} from \"./ticketCategoryOptions\";\ninitializeIcons();\n\n// interface ILoginProps  {\n\n// }\ninterface ICreateOrUpdate {\n    type: string;\n    userObj: {\n        \"subject\": string,\n        \"department\": string,\n        \"category\": string,\n        \"comment\": string,\n        \"userName\": string\n    };\n}\n\n\n\nconst TicketForm: React.FC<ICreateOrUpdate> = (props) => {\n    const cardTokens: ICardTokens = { childrenMargin: 12 };\n\n    const siteTextStyles: ITextStyles = {\n        root: {\n            color: '#025F52',\n            fontWeight: FontWeights.semibold\n        }\n    };\n    const descriptionTextStyles: ITextStyles = {\n        root: {\n            color: '#333333',\n            fontWeight: FontWeights.semibold\n        }\n    };\n    const helpfulTextStyles: ITextStyles = {\n        root: {\n            color: '#333333',\n            fontWeight: FontWeights.regular\n        }\n    };\n    const iconStyles: IIconStyles = {\n        root: {\n            color: '#0078D4',\n            fontSize: 16,\n            fontWeight: FontWeights.regular\n        }\n    };\n    const footerCardSectionStyles: ICardSectionStyles = {\n        root: {\n            borderTop: '1px solid #F3F2F1'\n        }\n    };\n\n    const footerCardSectionTokens: ICardSectionTokens = { padding: '12px 0px 0px' };\n    \n\n    const {subject, department, category, comment, userName} = props.userObj;\n\n\n    return (\n        <React.Fragment>\n            <Card  tokens={cardTokens} className=\"ticketCard animated fadeInLeft\"  compact={false}>\n                <Card.Item>\n                    <Persona text={userName} secondaryText=\"Feb 2, 2019\" />\n                </Card.Item>\n                <Card.Section>\n                    <Text variant=\"small\" styles={siteTextStyles}>\n                        {category}\n            </Text>\n                    <Text styles={descriptionTextStyles}>{subject}</Text>\n                    <Text variant=\"small\" styles={helpfulTextStyles}>\n                        {comment}\n            </Text>\n                </Card.Section>\n                <Card.Section horizontal styles={footerCardSectionStyles} tokens={footerCardSectionTokens}>\n                <PrimaryButton className=\"cardButton\" text={props.type} />\n                </Card.Section>\n            </Card>\n\n        </React.Fragment>\n    )\n}\n\nexport default TicketForm;","import React, { useState } from 'react';\nimport { DefaultButton, PrimaryButton, TextField, Stack, initializeIcons, ITextFieldProps, Dropdown } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport NavMenu from \"./sideNavMenu\";\nimport Navbar from \"./navbar\";\n// import {TicketCategory} from \"./ticketCategoryOptions\";\ninitializeIcons();\n\n// interface ILoginProps  {\n\n// }\ninterface ICreateOrUpdate {\n    type:  \"Create\" | \"Update\"\n}\n\n\n\nconst TicketForm: React.FC<ICreateOrUpdate> = (props) => {\n\n    // const [userEmail, setEmail] = useState<string>(\"\");\n    // const [userPassword, setPassword] = useState<string>(\"\");\n    // const emailInputRef = useRef<HTMLInputElement>(null);\n\n\n\n    return (\n        <React.Fragment>\n\n            <form className=\"animated fadeInUp\">\n                <Stack>\n                    <h1>Create New Support Ticket</h1>\n                    <div className=\"flexInputs\">\n                        <TextField label=\"Subject\" required />\n                        <TextField label=\"Department\" required />\n                        <Dropdown\n                            required\n                            id=\"categoryDropdown\"\n                            placeholder=\"Select a category\"\n                            label=\"Category\"\n                            options={[\n                                { key: 'A', text: 'Hardware' },\n                                { key: 'B', text: 'Networking' },\n                                { key: 'C', text: 'Software' },\n                                { key: 'D', text: 'User Auth' },\n                                { key: 'E', text: 'Other' }\n                            ]}\n                        />\n                    </div>\n                    <TextField label=\"With auto adjusting height\" multiline autoAdjustHeight />\n                    <div className=\"ticketButtonDiv\">\n                        <PrimaryButton className=\"submitTicket\" text={props.type} />\n                    </div>\n\n\n                </Stack>\n            </form>\n\n\n        </React.Fragment>\n    )\n}\n\nexport default TicketForm;","import React, { useState, useEffect } from 'react';\nimport { DefaultButton, PrimaryButton, TextField, Stack, initializeIcons, ITextFieldProps, Dropdown } from 'office-ui-fabric-react';\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\nimport NavMenu from \"./sideNavMenu\";\nimport Navbar from \"./navbar\";\nimport DisplayList from \"./ticketCard\";\nimport CreatTicket from \"./createOrUpdateTicketForm\";\nimport staticData from \"../staticData/helpdeskTickets.json\";\nimport { BrowserRouter, Switch, Route, RouteComponentProps } from 'react-router-dom';\n\n// import {TicketCategory} from \"./ticketCategoryOptions\";\ninitializeIcons();\n\n// interface ILoginProps  {\n\n// }\ninterface ICreateOrUpdate {\n}\n\ninterface IDetailProps extends RouteComponentProps<{ dashType: string }> {\n    \n\n}\n\nconst TicketForm: React.FC<IDetailProps> = (props) => {\n\n\n\n    const [styleId, setStyleId] = useState<string>(\"\");\n    const { dashType } = props.match.params;\n\n    useEffect(()=>{\n        if (dashType === \"ViewAll\" || dashType === \"deleteTicket\") {\n            setStyleId(\"dashboardMain\");\n        } else if (dashType === \"createTicket\" || dashType === \"updateTicket\") {\n            setStyleId(\"dashboardMainCreate\");\n        } \n        \n    },[])\n\n    return (\n        <React.Fragment>\n            <Navbar />\n            <div className=\"mainDashboardDiv\">\n                <NavMenu />\n                <div id={`${styleId}`}>\n                    {\n                        dashType === \"ViewAll\" ? \n\n                        staticData.map(item => {\n                            return <DisplayList type=\"Edit\" userObj={item}/>\n                        })\n                    : dashType === \"createTicket\" ? <CreatTicket type={\"Create\"}/> \n\n                    : dashType === \"updateTicket\" ? <CreatTicket type={\"Update\"}/>\n\n                    : dashType === \"deleteTicket\" ? \n                    \n                    staticData.map(item => {\n                        return <DisplayList type=\"Delete\" userObj={item}  />\n                    })\n                    :\n                    null\n                    }\n                </div>\n            </div>\n\n        </React.Fragment>\n    )\n}\n\nexport default TicketForm;","import React from 'react';\nimport LoginOrSignUp from './components/loginOrSignUpParent';\nimport Dashboard from './components/dashboard';\nimport { BrowserRouter, Switch, Route, RouteComponentProps } from 'react-router-dom';\n// import logo from './logo.svg';\nimport './style/main.scss';\nimport { PrimaryButton } from 'office-ui-fabric-react';\n\n\ninterface IAppProps {\n\n}\n\nconst App: React.FC<IAppProps> = props => {\n\n  return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={LoginOrSignUp} />\n          <Route exact path=\"/dashboard/:dashType\" component={Dashboard}/>\n          {/* <Route exact path=\"/dashboard\" component={Dashboard}/> */}\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}